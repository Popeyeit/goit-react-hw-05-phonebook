{"version":3,"sources":["components/Form/Form.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["Form","state","name","number","changeValue","target","value","setState","handleSubmit","e","preventDefault","item","id","Date","now","console","log","props","addContact","this","onSubmit","type","onChange","Component","ContactList","contacts","deleteContact","TransitionGroup","component","className","map","CSSTransition","key","classNames","timeout","onClick","App","hasNameInContacts","search","isLoade","hasContact","some","cont","prev","filter","handleInputSearch","findContact","includes","in","mountOnEnter","unmountOnExit","onEntered","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ef5dcef.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class Form extends Component {\n  state = { name: '', number: '' };\n  changeValue = ({ target }) => {\n    const { value } = target;\n    const { name } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    const item = {\n      id: Date.now(),\n      name,\n      number,\n    };\n    console.log(item);\n    this.props.addContact(item);\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          onChange={this.changeValue}\n        />\n        <input\n          type=\"number\"\n          value={number}\n          name=\"number\"\n          onChange={this.changeValue}\n        />\n        <button>Add contact</button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport './ContactList.css';\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <TransitionGroup component=\"ul\" className=\"list\">\n      {contacts.map(({ name, number, id }) => {\n        return (\n          <CSSTransition key={id} classNames=\"change\" timeout={250}>\n            <li className=\"item\">\n              <p>{name}</p>\n              <p>{number}</p>\n              <button onClick={() => deleteContact(id)}>close</button>\n            </li>\n          </CSSTransition>\n        );\n      })}\n    </TransitionGroup>\n  );\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Form from './components/Form/Form';\nimport ContactList from './components/ContactList/ContactList';\nimport './App.css';\nclass App extends Component {\n  state = {\n    contacts: [],\n    hasNameInContacts: false,\n    search: '',\n    isLoade: false,\n  };\n  hasContact = name => {\n    const { contacts } = this.state;\n    return contacts.some(cont => cont.name === name);\n  };\n  addContact = item => {\n    const hasNameIn = this.hasContact(item.name);\n    if (hasNameIn) {\n      this.setState({ hasNameInContacts: true });\n      return;\n    }\n    this.setState(prev => ({\n      contacts: [...prev.contacts, item],\n      hasNameInContacts: false,\n    }));\n  };\n  deleteContact = id => {\n    console.log(id);\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(item => item.id !== id),\n    }));\n  };\n  handleInputSearch = ({ target }) => {\n    this.setState({ search: target.value });\n  };\n  findContact = () => {\n    const { contacts, search } = this.state;\n    if (search) {\n      return contacts.filter(item => item.name.includes(search));\n    }\n    return contacts;\n  };\n  componentDidMount() {\n    this.setState({ isLoade: true });\n  }\n\n  render() {\n    const { contacts, hasNameInContacts, search, isLoade } = this.state;\n    return (\n      <div>\n        <CSSTransition\n          classNames=\"phonebook\"\n          timeout={1500}\n          in={isLoade}\n          mountOnEnter\n        >\n          <div>\n            <h1>Phonebook</h1>\n          </div>\n        </CSSTransition>\n        <CSSTransition\n          in={hasNameInContacts}\n          classNames=\"alert\"\n          unmountOnExit\n          timeout={2500}\n          onEntered={() => this.setState({ hasNameInContacts: false })}\n        >\n          <div className=\"alert-wrapper\">\n            <h1 className=\"alert-title\">SPARTAAAAAAAAAAAA</h1>\n          </div>\n        </CSSTransition>\n        <Form addContact={this.addContact} />\n        <CSSTransition\n          in={contacts.length > 1}\n          unmountOnExit\n          classNames=\"search\"\n          timeout={250}\n        >\n          <label>\n            Find contacts by name\n            <input\n              type=\"text\"\n              name=\"search\"\n              value={search}\n              onChange={this.handleInputSearch}\n            />\n          </label>\n        </CSSTransition>\n\n        <ContactList\n          contacts={this.findContact()}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}