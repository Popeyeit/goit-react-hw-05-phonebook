{"version":3,"sources":["components/Form/Form.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["Form","state","name","number","changeValue","target","value","setState","handleSubmit","e","preventDefault","item","id","Date","now","console","log","props","addContact","this","onSubmit","className","type","placeholder","onChange","Component","ContactList","contacts","deleteContact","TransitionGroup","component","map","CSSTransition","key","classNames","timeout","onClick","App","hasNameInContacts","search","isLoade","hasContact","some","cont","prev","filter","handleInputSearch","findContact","includes","in","mountOnEnter","unmountOnExit","onEntered","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4694d35c.chunk.js","sourcesContent":["import React, {\n  Component\n} from 'react';\nimport './Form.css';\nexport default class Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  changeValue = ({\n    target\n  }) => {\n    const {\n      value\n    } = target;\n    const {\n      name\n    } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const {\n      name,\n      number\n    } = this.state;\n\n    const item = {\n      id: Date.now(),\n      name,\n      number,\n    };\n    console.log(item);\n    this.props.addContact(item);\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n  render() {\n    const {\n      name,\n      number\n    } = this.state;\n    return ( <\n      form onSubmit = {\n        this.handleSubmit\n      }\n      className = \"form\" >\n      <\n      input className = \"form-item\"\n      type = \"text\"\n      value = {\n        name\n      }\n      name = \"name\"\n      placeholder = 'Your name'\n      onChange = {\n        this.changeValue\n      }\n      />{' '} <\n      input className = \"form-item\"\n      type = \"phone\"\n      placeholder = '333-333-333'\n      value = {\n        number\n      }\n      name = \"number\"\n      onChange = {\n        this.changeValue\n      }\n      />{' '} <\n      button className = \"form-btn\" > Add contact < /button>{' '} <\n      /form>\n    );\n  }\n}","import React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport './ContactList.css';\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <TransitionGroup component=\"ul\" className=\"list\">\n      {contacts.map(({ name, number, id }) => {\n        return (\n          <CSSTransition key={id} classNames=\"change\" timeout={250}>\n            <li className=\"item\">\n              <p className=\"list-name\">{name} </p>\n              <p className=\"list-phone\">{number} </p>\n              <button onClick={() => deleteContact(id)} className=\"list-btn\">\n                X\n              </button>\n            </li>\n          </CSSTransition>\n        );\n      })}\n    </TransitionGroup>\n  );\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Form from './components/Form/Form';\nimport ContactList from './components/ContactList/ContactList';\nimport './App.css';\nclass App extends Component {\n  state = {\n    contacts: [],\n    hasNameInContacts: false,\n    search: '',\n    isLoade: false,\n  };\n  hasContact = name => {\n    const { contacts } = this.state;\n    return contacts.some(cont => cont.name === name);\n  };\n  addContact = item => {\n    const hasNameIn = this.hasContact(item.name);\n    if (hasNameIn) {\n      this.setState({ hasNameInContacts: true });\n      return;\n    }\n    this.setState(prev => ({\n      contacts: [...prev.contacts, item],\n      hasNameInContacts: false,\n    }));\n  };\n  deleteContact = id => {\n    console.log(id);\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(item => item.id !== id),\n    }));\n  };\n  handleInputSearch = ({ target }) => {\n    this.setState({ search: target.value });\n  };\n  findContact = () => {\n    const { contacts, search } = this.state;\n    if (search) {\n      return contacts.filter(item => item.name.includes(search));\n    }\n    return contacts;\n  };\n  componentDidMount() {\n    this.setState({ isLoade: true });\n  }\n\n  render() {\n    const { contacts, hasNameInContacts, search, isLoade } = this.state;\n    return (\n      <div>\n        <CSSTransition\n          classNames=\"phonebook\"\n          timeout={1500}\n          in={isLoade}\n          mountOnEnter\n        >\n          <div>\n            <h1>Phonebook</h1>\n          </div>\n        </CSSTransition>\n        <CSSTransition\n          in={hasNameInContacts}\n          classNames=\"alert\"\n          unmountOnExit\n          timeout={2500}\n          onEntered={() => this.setState({ hasNameInContacts: false })}\n        >\n          <div className=\"alert-wrapper\">\n            <h1 className=\"alert-title\">\n              This name is have already in contacts list\n            </h1>\n          </div>\n        </CSSTransition>\n        <Form addContact={this.addContact} />\n        <CSSTransition\n          in={contacts.length > 1}\n          unmountOnExit\n          classNames=\"search\"\n          timeout={250}\n        >\n          <label className=\"form-label\">\n            <p>Find contacts by name:</p>\n            <input\n              type=\"text\"\n              name=\"search\"\n              value={search}\n              onChange={this.handleInputSearch}\n            />\n          </label>\n        </CSSTransition>\n\n        <ContactList\n          contacts={this.findContact()}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}